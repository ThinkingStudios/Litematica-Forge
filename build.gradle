plugins {
    id "dev.architectury.loom" version "1.4-SNAPSHOT"
    id "maven-publish"
    id 'com.modrinth.minotaur' version '2.+'
    id 'net.darkhax.curseforgegradle' version '1.+'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.mod_version}-mc${project.minecraft_version}"
group = project.maven_group

loom {
    forge {
        mixinConfigs = [
                "forgematica.mixins.json"
        ]
    }
}

repositories {
    maven { url "https://api.modrinth.com/maven" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    forge "net.minecraftforge:forge:${project.forge_version}"

    modImplementation "maven.modrinth:mafglib:${project.malilib_version}"

    implementation "com.google.code.findbugs:jsr305:3.0.2"
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.release = 17
}

java {
    withSourcesJar()
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")

    projectId = "${project.modrinth_id}"
    versionNumber = "${project.version}"
    versionType = "beta"
    changelog = file("CHANGELOG.md").getText('UTF-8')
    uploadFile = remapJar
    additionalFiles = [sourcesJar]
    gameVersions = ["1.18", "1.18.1", "1.18.2"]
    loaders = ["forge"]
    dependencies {
        required.project("mafglib")
    }
}

task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
    apiToken = System.getenv("CURSEFORGE_TOKEN")
    disableVersionDetection()

    def mainFile = upload(project.curseforge_id, remapJar)
    mainFile.displayName = "${project.version}"
    mainFile.releaseType = "beta"
    mainFile.changelog = file("CHANGELOG.md")
    mainFile.changelogType = "markdown"
    mainFile.addModLoader("Forge")
    mainFile.addJavaVersion("Java 17", "Java 18")
    mainFile.addGameVersion("1.18", "1.18.1", "1.18.2")
    mainFile.addRequirement("mafglib")

    def sourcesFile = mainFile.withAdditionalFile(sourcesJar)
    sourcesFile.changelog = file("CHANGELOG.md")
    sourcesFile.changelogType = "markdown"
}


// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}