plugins {
    alias(libs.plugins.architectury.loom)
    alias(libs.plugins.modpublisher)
    id "maven-publish"
}

base.archivesName = libs.versions.archives.name
version = "${libs.versions.version.get()}-mc${libs.versions.minecraft.version.get()}"
group = libs.versions.maven.group

repositories {
    maven { url "https://www.jitpack.io" }
    maven { url "https://maven.neoforged.net/releases/" }
    maven { url 'https://api.modrinth.com/maven' }
    maven {
        url "https://maven2.bai.lol"
        content {
            includeGroup "lol.bai"
        }
    }
}

dependencies {
    minecraft libs.minecraft
    mappings loom.layered {
        mappings variantOf(libs.yarn.mappings) { classifier("v2") }
        mappings libs.yarn.mappings.patch
    }
    neoForge libs.neoforge

    modImplementation libs.mafglib
    modImplementation libs.badpackets

    implementation libs.jsr305
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/neoforge.mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.release = 21
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21

    withSourcesJar()
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
			from components.java
		}
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

publisher {
    apiKeys {
        modrinth System.getenv("MODRINTH_TOKEN")
        curseforge System.getenv("CURSEFORGE_TOKEN")
    }

    setCurseID("${libs.versions.id.curseforge.get()}")
    setModrinthID("${libs.versions.id.modrinth.get()}")
    setVersionType("alpha")
    setChangelog(file("CHANGELOG.md").getText("UTF-8"))
    setVersion("${project.version}")
    setDisplayName("${project.version}")
    setGameVersions("1.21", "1.21.1")
    setLoaders(loom.platform.get().id())
    setCurseEnvironment("client")
    setArtifact(remapJar)
    addAdditionalFile(sourcesJar)
    curseDepends.required("mafglib", "badpackets")
    modrinthDepends.required("mafglib", "badpackets")
}
