plugins {
    id "dev.architectury.loom" version "1.4-SNAPSHOT"
    id "maven-publish"
    id "me.shedaniel.unified-publishing" version "0.1.+"
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.mod_version}-mc${project.minecraft_version}"
group = project.maven_group

loom {
    forge {
        mixinConfigs = [
                "forgematica.mixins.json"
        ]
    }
}

repositories {
    maven { url "https://api.modrinth.com/maven" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    forge "net.minecraftforge:forge:${project.forge_version}"

    modImplementation "maven.modrinth:mafglib:${project.malilib_version}"

    implementation "com.google.code.findbugs:jsr305:3.0.2"
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.release = 17
}

java {
    withSourcesJar()
}


// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

unifiedPublishing {
    project {
        displayName = "$project.version"
        releaseType = "beta"
        changelog = file("CHANGELOG.md").getText('UTF-8')
        gameVersions = ["1.18", "1.18.1", "1.18.2"]
        gameLoaders = ["forge"]

        mainPublication remapJar
        secondaryPublications.builtBy(sourcesJar)

        relations {
            depends {
                curseforge = "mafglib"
                modrinth = "mafglib"
            }
        }
        var CURSEFORGE_TOKEN = project.findProperty("CURSEFORGE_TOKEN") ?: System.getenv("CURSEFORGE_TOKEN")
        if (CURSEFORGE_TOKEN != null) {
            curseforge {
                token = CURSEFORGE_TOKEN
                id = project.curseforge_id
            }
        }

        var MODRINTH_TOKEN = project.findProperty("MODRINTH_TOKEN") ?: System.getenv("MODRINTH_TOKEN")
        if (MODRINTH_TOKEN != null) {
            modrinth {
                token = MODRINTH_TOKEN
                id = project.modrinth_id
                version = "$project.version"
            }
        }
    }
}